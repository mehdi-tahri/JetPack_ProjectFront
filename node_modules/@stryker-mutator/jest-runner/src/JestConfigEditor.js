"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CustomJestConfigLoader_1 = require("./configLoaders/CustomJestConfigLoader");
var ReactScriptsJestConfigLoader_1 = require("./configLoaders/ReactScriptsJestConfigLoader");
var ReactScriptsTSJestConfigLoader_1 = require("./configLoaders/ReactScriptsTSJestConfigLoader");
var jestOverrideOptions_1 = require("./jestOverrideOptions");
var DEFAULT_PROJECT_NAME = 'custom';
var JestConfigEditor = /** @class */ (function () {
    function JestConfigEditor() {
    }
    JestConfigEditor.prototype.edit = function (strykerConfig) {
        // If there is no Jest property on the Stryker config create it
        strykerConfig.jest = strykerConfig.jest || {};
        // When no projectType is set, set it to the default
        strykerConfig.jest.projectType = strykerConfig.jest.projectType || strykerConfig.jest.project || DEFAULT_PROJECT_NAME;
        // When no config property is set, load the configuration with the project type
        strykerConfig.jest.config = strykerConfig.jest.config || this.getConfigLoader(strykerConfig.jest.projectType).loadConfig();
        // Override some of the config properties to optimise Jest for Stryker
        strykerConfig.jest.config = this.overrideProperties(strykerConfig.jest.config);
    };
    JestConfigEditor.prototype.getConfigLoader = function (projectType) {
        switch (projectType.toLowerCase()) {
            case DEFAULT_PROJECT_NAME:
                return new CustomJestConfigLoader_1.default(process.cwd());
            case 'react':
                return new ReactScriptsJestConfigLoader_1.default(process.cwd());
            case 'react-ts':
                return new ReactScriptsTSJestConfigLoader_1.default(process.cwd());
            default:
                throw new Error("No configLoader available for " + projectType);
        }
    };
    JestConfigEditor.prototype.overrideProperties = function (config) {
        return Object.assign(config, jestOverrideOptions_1.default);
    };
    return JestConfigEditor;
}());
exports.default = JestConfigEditor;
//# sourceMappingURL=JestConfigEditor.js.map