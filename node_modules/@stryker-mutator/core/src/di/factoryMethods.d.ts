import { commonTokens, OptionsContext, Injector, PluginKind, PluginResolver } from '@stryker-mutator/api/plugin';
import { coreTokens, PluginCreator } from '.';
import { LoggerFactoryMethod, Logger } from '@stryker-mutator/api/logging';
import { StrykerOptions } from '@stryker-mutator/api/core';
import { Config } from '@stryker-mutator/api/config';
import { ConfigEditorApplier } from '../config';
export declare function pluginResolverFactory(injector: Injector<{
    [commonTokens.logger]: Logger;
    [coreTokens.pluginDescriptors]: ReadonlyArray<string>;
}>): PluginResolver;
export declare namespace pluginResolverFactory {
    var inject: ["$injector"];
}
export declare function testFrameworkFactory(injector: Injector<OptionsContext & {
    [coreTokens.pluginCreatorTestFramework]: PluginCreator<PluginKind.TestFramework>;
}>): import("@stryker-mutator/api/src/test_framework/TestFramework").default | null;
export declare namespace testFrameworkFactory {
    var inject: ["$injector"];
}
export declare function loggerFactory(getLogger: LoggerFactoryMethod, target: Function | undefined): Logger;
export declare namespace loggerFactory {
    var inject: ["getLogger", "$target"];
}
export declare function optionsFactory(config: Config, configEditorApplier: ConfigEditorApplier): StrykerOptions;
export declare namespace optionsFactory {
    var inject: ["configReadFromConfigFile", "configEditorApplier"];
}
//# sourceMappingURL=factoryMethods.d.ts.map